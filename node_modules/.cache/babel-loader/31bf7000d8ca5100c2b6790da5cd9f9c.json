{"remainingRequest":"/home/kossick/Documents/sibe_practise_frontend/node_modules/babel-loader/lib/index.js!/home/kossick/Documents/sibe_practise_frontend/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/kossick/Documents/sibe_practise_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/kossick/Documents/sibe_practise_frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/kossick/Documents/sibe_practise_frontend/src/components/QuestionAsker.vue?vue&type=template&id=1d9fd4a0","dependencies":[{"path":"/home/kossick/Documents/sibe_practise_frontend/src/components/QuestionAsker.vue","mtime":1620063835294},{"path":"/home/kossick/Documents/sibe_practise_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kossick/Documents/sibe_practise_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/kossick/Documents/sibe_practise_frontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/home/kossick/Documents/sibe_practise_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kossick/Documents/sibe_practise_frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIEZyYWdtZW50IGFzIF9GcmFnbWVudCB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAib3V0bGluZSIKfTsKdmFyIF9ob2lzdGVkXzIgPSB7CiAgY2xhc3M6ICJxdWVzdGlvbiIKfTsKdmFyIF9ob2lzdGVkXzMgPSB7CiAgY2xhc3M6ICJjaG9pY2VzIgp9Owp2YXIgX2hvaXN0ZWRfNCA9IHsKICBjbGFzczogIm5hdkJhciIKfTsKdmFyIF9ob2lzdGVkXzUgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAiaW5mbyIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2NyZWF0ZVZOb2RlKCJoMSIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcoJGRhdGEuYXNrZWRRdWVzdGlvbiksIDEKICAvKiBURVhUICovCiAgKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBbX2NyZWF0ZVZOb2RlKCJidXR0b24iLCB7CiAgICBjbGFzczogImxlZnRCdXR0b24iLAogICAgb25DbGljazogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy51cGRhdGVBbnN3ZXIoJGRhdGEub3B0aW9uT25lKTsKICAgIH0pCiAgfSwgX3RvRGlzcGxheVN0cmluZygkZGF0YS5vcHRpb25PbmUpLCAxCiAgLyogVEVYVCAqLwogICksIF9jcmVhdGVWTm9kZSgiYnV0dG9uIiwgewogICAgY2xhc3M6ICJyaWdodEJ1dHRvbiIsCiAgICBvbkNsaWNrOiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLnVwZGF0ZUFuc3dlcigkZGF0YS5vcHRpb25Ud28pOwogICAgfSkKICB9LCBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLm9wdGlvblR3byksIDEKICAvKiBURVhUICovCiAgKV0pXSksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNCwgW19jcmVhdGVWTm9kZSgiYnV0dG9uIiwgewogICAgY2xhc3M6IFsibmF2QnV0dG9uIiwgewogICAgICBkaXNhYmxlZEJ1dHRvbjogJGRhdGEucGFnZUluZGV4ID09PSAwCiAgICB9XSwKICAgIGlkOiAicHJldlEiLAogICAgZGlzYWJsZWQ6ICRkYXRhLnBhZ2VJbmRleCA9PT0gMCwKICAgIG9uQ2xpY2s6IF9jYWNoZVszXSB8fCAoX2NhY2hlWzNdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuaW5jcmVtZW50SW5kZXgoLTEpOwogICAgfSkKICB9LCAiIDwtIFByZXZpb3VzIHF1ZXN0aW9uICIsIDEwCiAgLyogQ0xBU1MsIFBST1BTICovCiAgLCBbImRpc2FibGVkIl0pLCBfY3JlYXRlVk5vZGUoImJ1dHRvbiIsIHsKICAgIGNsYXNzOiBbIm5hdkJ1dHRvbiIsIHsKICAgICAgZGlzYWJsZWRCdXR0b246ICRkYXRhLnBhZ2VJbmRleCA9PT0gJGRhdGEucXVlc3Rpb25zLmxlbmd0aCAtIDEKICAgIH1dLAogICAgaWQ6ICJuZXh0USIsCiAgICBkaXNhYmxlZDogJGRhdGEucGFnZUluZGV4ID09PSAkZGF0YS5xdWVzdGlvbnMubGVuZ3RoIC0gMSwKICAgIG9uQ2xpY2s6IF9jYWNoZVs0XSB8fCAoX2NhY2hlWzRdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuaW5jcmVtZW50SW5kZXgoKTsKICAgIH0pCiAgfSwgIiBOZXh0IHF1ZXN0aW9uIC0+ICIsIDEwCiAgLyogQ0xBU1MsIFBST1BTICovCiAgLCBbImRpc2FibGVkIl0pXSldKSwgdGhpcy5hbnN3ZXIgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soInAiLCBfaG9pc3RlZF81LCBfdG9EaXNwbGF5U3RyaW5nKCd7UXVlc3Rpb246ICcgKyAkZGF0YS5hc2tlZFF1ZXN0aW9uICsgJywgQW5zd2VyOiAnICsgJGRhdGEuYW5zd2VyICsgJ30nKSwgMQogIC8qIFRFWFQgKi8KICApKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0sIDY0CiAgLyogU1RBQkxFX0ZSQUdNRU5UICovCiAgKTsKfQ=="},{"version":3,"sources":["/home/kossick/Documents/sibe_practise_frontend/src/components/QuestionAsker.vue"],"names":[],"mappings":";;AACS,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;AAGF,EAAA,KAAK,EAAC;;;AAWV,EAAA,KAAK,EAAC;;;;AAiBZ,EAAA,KAAK,EAAC;;;sDAhCT,YAAA,CA+BM,KA/BN,EAAA,UAAA,EA+BM,CA9BF,YAAA,CAaM,KAbN,EAAA,UAAA,EAaM,CAZF,YAAA,CAA4B,IAA5B,EAA4B,IAA5B,EAA4B,gBAAA,CAArB,KAAA,CAAA,aAAqB,CAA5B,EAAoB;AAAA;AAApB,GAYE,EAVF,YAAA,CASM,KATN,EAAA,UAAA,EASM,CARF,YAAA,CAGS,QAHT,EAGS;AAHD,IAAA,KAAK,EAAC,YAGL;AAFP,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,YAAA,CAAa,KAAA,CAAA,SAAb,CAAF;AAAA,KAAA;AAEE,GAHT,E,iBAEO,KAAA,CAAA,S,CAFP,EAEgB;AAAA;AAFhB,GAQE,EAJF,YAAA,CAGS,QAHT,EAGS;AAHD,IAAA,KAAK,EAAC,aAGL;AAFP,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,YAAA,CAAa,KAAA,CAAA,SAAb,CAAF;AAAA,KAAA;AAEE,GAHT,E,iBAEO,KAAA,CAAA,S,CAFP,EAEgB;AAAA;AAFhB,GAIE,CATN,CAUE,CAbN,CA8BE,EAhBF,YAAA,CAeM,KAfN,EAAA,UAAA,EAeM,CAdF,YAAA,CAMS,QANT,EAMS;AAND,IAAA,KAAK,EAAA,CAAC,WAAD,EAAY;AAAA,MAAA,cAAA,EAEG,KAAA,CAAA,SAAA,KAAS;AAFZ,KAAZ,CAMJ;AALT,IAAA,EAAE,EAAC,OAKM;AAHR,IAAA,QAAQ,EAAE,KAAA,CAAA,SAAA,KAAS,CAGX;AAFR,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,cAAA,CAAc,CAAA,CAAd,CAAF;AAAA,KAAA;AAEG,GANT,EAI4B,wBAJ5B,EAMA;AAAA;AANA,IAMA,CAAA,UAAA,CANA,CAcE,EAPF,YAAA,CAMS,QANT,EAMS;AAND,IAAA,KAAK,EAAA,CAAC,WAAD,EAAY;AAAA,MAAA,cAAA,EAEG,KAAA,CAAA,SAAA,KAAY,KAAA,CAAA,SAAA,CAAU,MAAV,GAAgB;AAF/B,KAAZ,CAMJ;AALT,IAAA,EAAE,EAAC,OAKM;AAHR,IAAA,QAAQ,EAAE,KAAA,CAAA,SAAA,KAAY,KAAA,CAAA,SAAA,CAAU,MAAV,GAAgB,CAG9B;AAFR,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,cAAA,EAAF;AAAA,KAAA;AAEG,GANT,EAI0B,oBAJ1B,EAMA;AAAA;AANA,IAMA,CAAA,UAAA,CANA,CAOE,CAfN,CAgBE,CA/BN,C,OAgC2B,M,kBAA3B,YAAA,CAAwG,GAAxG,EAAA,UAAA,EAAwG,gBAAA,CAAA,gBAAlD,KAAA,CAAA,aAAkD,GAArC,YAAqC,GAAnB,KAAA,CAAA,MAAmB,GAAb,GAAa,CAAxG,EAA2F;AAAA;AAA3F,G","sourcesContent":["<template>\n    <div class=\"outline\">\n        <div class=\"question\">\n            <h1>{{ askedQuestion }}</h1>\n\n            <div class=\"choices\">\n                <button class=\"leftButton\" \n                 @click=\"updateAnswer(optionOne)\">\n                    {{ optionOne }}\n                </button>\n                <button class=\"rightButton\" \n                 @click=\"updateAnswer(optionTwo)\">\n                    {{ optionTwo }}\n                </button>\n            </div>\n        </div>\n        <div class=\"navBar\">\n            <button class=\"navButton\" \n            id=\"prevQ\"\n            :class = \"{ disabledButton: pageIndex===0 }\"\n            :disabled=\"pageIndex===0\"\n            @click=\"incrementIndex(-1)\">\n                &lt;- Previous question\n            </button>\n            <button class=\"navButton\" \n            id=\"nextQ\"\n            :class = \"{ disabledButton: pageIndex===questions.length - 1 }\"\n            :disabled=\"pageIndex===questions.length - 1\"\n            @click=\"incrementIndex()\">\n                Next question ->\n            </button>\n        </div>\n    </div>\n    <p class=\"info\" v-if=\"this.answer\">{{ '{Question: ' + askedQuestion + ', Answer: ' + answer + '}' }}</p>\n</template>\n\n<script>\nexport default {\n    name: 'QuestionAsker',\n    mounted: function () {\n        this.getQuestions()\n    },\n    data() {\n        return{\n            pageIndex: 0,\n            questions: [],\n            activeQuestion: '',\n            askedQuestion: '',\n            optionOne: '',\n            optionTwo: '',\n            answer: ''\n    }\n    },\n    methods: { \n        async getQuestions() {\n            const response = await fetch(\"http://localhost:8080/questions/view\", {\n                method: 'get',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n            this.questions = await response.json();\n            this.updateInformation(this.pageIndex);\n        },\n        updateInformation(pageIndex) {\n            this.activeQuestion = this.questions[pageIndex];\n            this.askedQuestion = this.activeQuestion.question;\n            this.optionOne = this.activeQuestion.option_1;\n            this.optionTwo = this.activeQuestion.option_2;\n            this.answer = '';\n        },\n        updateAnswer(answer) {\n            this.answer = answer;\n            this.submitAnswer();\n        },\n        async submitAnswer() {\n            const response = await fetch(\"http://localhost:8080/questions/submitanswer\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({ 'question': this.pageIndex + 1, 'answer': this.answer })\n            });\n\n            const data = await response.json();\n            console.log(data);\n        },\n        incrementIndex(step=1) {\n            this.pageIndex += step;\n            this.updateInformation(this.pageIndex);\n        }\n    }\n}\n</script>\n\n<style>\nbody{\nbackground-color: rgb(36, 129, 198);\nfont-family: Arial, Helvetica, sans-serif;\n}\n\ndiv.question {\n    display: flex;\n    align-items: center;\n}\n\ndiv.question h1 {\n    position: absolute;\n    left: 50%;\n    top: 45%;\n    transform: translate(-50%, -75%);\n    color: rgb(33, 37, 41);\n    padding-bottom: 25px;\n}\n\ndiv.question div.choices {\n    position: absolute;\n    bottom: 45%;\n    left: 50%;\n    transform: translate(-50%, 75%);\n    padding-top: 25px;\n    padding-bottom: 25px;\n}\n\nbutton {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    color: white;\n    border: none;\n    padding: 15px 75px;\n    border-radius: 4px;\n    font-size: 10px;\n    transition-duration: 0.3s;\n}\n\nbutton.leftButton {\n    background-color: rgb(32, 201, 151);\n}\n\nbutton.leftButton:hover {\n    background-color: rgb(23, 152, 114);\n}\n\nbutton.rightButton {\n    margin-left: 100px;\n    background-color: rgb(220, 53, 69);\n}\n\nbutton.rightButton:hover {\n    background-color: rgb(189, 33, 48);\n}\n\ndiv.navBar {\n    position: absolute;\n    bottom: 25%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    width: 450px;\n    display: flex;\n    align-items: center;\n    font-size: 10px;\n    padding-top: 25px;\n}\n\ndiv.navBar button.navButton {\n    position: absolute;\n    padding: 10px 30px;\n}\n\n#prevQ {\n    left: -15%;\n    background-color: tomato;\n}\n\n#nextQ {\n    right: -15%;\n    background-color: teal;\n}\n\n.disabledButton {\n    background-color: rgb(65, 154, 220);\n    cursor: not-allowed;\n}\n\np.info {\n    position: absolute;\n    bottom: 5%;\n}\n</style>"],"sourceRoot":""}]}